---
name: Pull Request

on:
  pull_request:
    branches: [ 'main' ]
    types:
      - opened
      - synchronize
    paths-ignore: ["docs/**"]

env:
  MAKEFLAGS: '-j 2'

jobs:
  lint:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19.x

      - name: Install Buf
        uses: bufbuild/buf-setup-action@v1
        with:
          version: "1.9.0"
          github_token: ${{ secrets.PAT_TOKEN }}

      - name: Cache
        uses: actions/cache@v3
        if: success()
        with:
          path: |
            ~/.cache/vth-faas-sdk-go/${{ runner.os }}/x86_64/bin
            ~/.cache/vth-faas-sdk-go/${{ runner.os }}/x86_64/go/pkg/mod
            ~/.cache/vth-faas-sdk-go/${{ runner.os }}/x86_64/include
            ~/.cache/vth-faas-sdk-go/${{ runner.os }}/x86_64/versions
          key: ${{ runner.os }}-vth-faas-sdk-go-lint-${{ hashFiles('**/go.sum', 'make/**') }}
          restore-keys: |
            ${{ runner.os }}-vth-faas-sdk-go-lint-

      - name: Lint Code
        run: make lint
        env:
          BUF_BREAKING_AGAINST_INPUT: 'https://github.com/azarc-io/vth-faas-sdk-go.git#branch=main'
          BUF_INPUT_HTTPS_USERNAME: ${{ github.actor }}
          BUF_INPUT_HTTPS_PASSWORD: ${{ github.token }}
          BUF_BIN_OVERRIDE: buf
          GITHUB_TOKEN: "${{ secrets.PAT_TOKEN }}"

  test:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19.x

      - name: Cache
        uses: actions/cache@v3
        if: success()
        with:
          path: |
            ~/.cache/vth-faas-sdk-go/${{ runner.os }}/x86_64/bin
            ~/.cache/vth-faas-sdk-go/${{ runner.os }}/x86_64/go/pkg/mod
            ~/.cache/vth-faas-sdk-go/${{ runner.os }}/x86_64/include
            ~/.cache/vth-faas-sdk-go/${{ runner.os }}/x86_64/versions
          key: ${{ runner.os }}-vth-faas-sdk-go-test-${{ hashFiles('**/go.sum', 'make/**') }}
          restore-keys: |
            ${{ runner.os }}-vth-faas-sdk-go-test-

      - name: Test With Coverage
        if: always()
        run: make cover

      - name: Annotate tests
        if: always()
        uses: guyarb/golang-test-annotations@v0.6.0
        with:
          test-results: .tmp/cover.json
          package-name: github.com/azarc-io/vth-faas-sdk-go

      - name: Pull request comment
        if: always()
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: make reportcoveragegithub

      - name: Test Summary
        if: always()
        uses: test-summary/action@v2
        with:
          paths: .tmp/report.xml

  release:
    runs-on: ubuntu-20.04
    needs:
      - lint
      - test
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: "Install Go"
        uses: actions/setup-go@v3
        with:
          go-version: 1.19.x

      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@v1
        id: tag
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
          WITH_V: true
          DEFAULT_BUMP: minor
          PRERELEASE: true

      - name: "AWS Credentials"
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: "Login to Amazon ECR"
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: public

      - name: "Create AWS ECR Repo"
        id: ecr
        uses: int128/create-ecr-repository-action@v1.83.0
        with:
          repository: vth-module-runner
          public: true

      - name: 'Releaser'
        uses: goreleaser/goreleaser-action@v2
        with:
          distribution: goreleaser
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
          GORELEASER_CURRENT_TAG: ${{ steps.tag.outputs.new_tag }}
          DOCKER_REGISTRY: ${{ steps.ecr.outputs.repository-uri }}
