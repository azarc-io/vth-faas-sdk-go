---
name: Pull Request

on:
  pull_request:
    branches: [ 'main' ]
    types:
      - opened
      - synchronize
    paths-ignore: ["docs/**"]

jobs:
  Test:
    strategy:
      matrix:
        go-version: [1.19.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}

      - name: Install Buf
        uses: bufbuild/buf-setup-action@v1
        with:
          version: "1.9.0"

      - name: Checkout code
        uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/Library/Caches/go-build
            %LocalAppData%\go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Downloads the dependencies
        run: make download

      - name: Setup GO
        uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - name: Checkout
        uses: actions/checkout@v3

      - name: Lint proto
        if: always()
        uses: bufbuild/buf-lint-action@v1

      - name: Lint code
        if: always()
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.50.1
          # skip cache because of flaky behaviors
          skip-build-cache: true
          skip-pkg-cache: true

      - uses: bufbuild/buf-breaking-action@v1
        if: always()
        with:
          against: "https://github.com/azarc-io/vth-faas-sdk-go.git#branch=main"

      - name: Test
        if: always()
        run: go test -cover -coverprofile coverage.txt -race -v -json ./... > test.json

      - name: Annotate tests
        if: always()
        uses: guyarb/golang-test-annotations@v0.6.0
        with:
          test-results: test.json
          package-name: github.com/azarc-io/vth-faas-sdk-go

      - name: Pull request comment
        if: always()
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          git fetch origin main
          go get github.com/johejo/go-cover-view
          go install github.com/johejo/go-cover-view
          go install github.com/jstemmer/go-junit-report/v2@latest
          go-cover-view -ci github-actions -git-diff-base origin/main
          go-junit-report -in test.json -iocopy -out report.xml

      - name: Test Summary
        if: always()
        uses: test-summary/action@v2
        with:
          paths: report.xml
