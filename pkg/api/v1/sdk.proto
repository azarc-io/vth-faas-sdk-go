// Copyright 2020-2022 Azarc
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";
package sdk_v1;

import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/azarc-io/vth-faas-sdk-go/pkg/api/v1;sdk_v1";

/************************************************************************/
/* COMMON
   /************************************************************************/

message Void {}

message Error {
  string error = 1;
  uint32 error_code = 2;
  ErrorType error_type = 3;
  optional google.protobuf.Value metadata = 4;
  optional RetryStrategy retry = 5;
}

message RetryStrategy {
  uint32 backoff = 1;
  uint32 count = 2;
}

/************************************************************************/
/* ENUMS
   /************************************************************************/

enum ErrorType {
  Failed = 0;
  Canceled = 1;
  Skip = 2;
  Retry = 3;
  Fatal = 4; // TODO os.Exit
}

enum StageStatus {
  StagePending = 0;
  StageStarted = 1;
  StageCompleted = 2;
  StageFailed = 3;
  StageSkipped = 4;
  StageCanceled = 5;
}

enum JobStatus {
  JobWaiting = 0;
  JobRunning = 1;
  JobDone = 2;
  JobCanceled = 3;
  JobCompletionStarted = 4;
  JobCompletionDone = 5;
  JobCompletionDoneWithErrors = 6;
  JobCompensationStarted = 7;
  JobCompensationDone = 8;
  JobCompensationDoneWithErrors = 9;
  JobCancellationStarted = 10;
  JobCancellationDone = 11;
  JobCancellationDoneWithErrors = 12;
}

/************************************************************************/
/* JOB
   /************************************************************************/

message LastActiveStage {
  string name = 1;
  StageStatus status = 2;
}

message ExecuteJobRequest {
  string key = 1;
  string transaction_id = 2;
  string correlation_id = 3;
  optional LastActiveStage last_active_stage = 4;
}

message ExecuteJobResponse {
  string agent_id = 1;
}

message SetJobStatusRequest {
  string key = 1;
  JobStatus status = 2;
  optional Error err = 3;
}

message RegisterHeartbeatRequest {
  string agent_id = 1;
}

/************************************************************************/
/* STAGE
   /************************************************************************/

message StageResult {
  google.protobuf.Value data = 1;
}

message SetStageStatusRequest {
  string name = 1;
  string job_key = 2;
  StageStatus status = 3;
  Error err = 4;
}

message GetStageResultRequest {
  string name = 1;
  string job_key = 2;
}

message GetStageResultResponse {
  StageResult result = 1;
}

message SetStageResultRequest {
  string job_key = 1;
  string name = 2;
  StageResult result = 3;
}

message GetStageStatusRequest {
  string job_key = 1;
  string name = 2;
}

message GetStageStatusResponse {
  StageStatus status = 1;
}

/************************************************************************/
/* VARIABLE
   /************************************************************************/

message Variable {
  string name = 1;
  google.protobuf.Value value = 2;
  string mime_type = 3;
}

message GetVariablesRequest {
  string stage = 1;
  string job_key = 2;
  repeated string name = 3;
}

message GetVariablesResponse {
  map<string, Variable> variables = 1;
}

message SetVariablesRequest {
  string stage = 1;
  string job_key = 2;
  map<string, Variable> variables = 3;
}

/************************************************************************/
/* AGENT
   /************************************************************************/

service AgentService {
  rpc ExecuteJob(ExecuteJobRequest) returns (ExecuteJobResponse);
}

/************************************************************************/
/* MANAGER
   /************************************************************************/

service ManagerService {
  rpc GetStageStatus(GetStageStatusRequest) returns (GetStageStatusResponse);
  rpc SetStageStatus(SetStageStatusRequest) returns (Void);

  rpc GetStageResult(GetStageResultRequest) returns (GetStageResultResponse);
  rpc SetStageResult(SetStageResultRequest) returns (Void);

  rpc GetVariables(GetVariablesRequest) returns (GetVariablesResponse);
  rpc SetVariables(SetVariablesRequest) returns (Void);

  rpc SetJobStatus(SetJobStatusRequest) returns (Void);
  rpc RegisterHeartbeat(RegisterHeartbeatRequest) returns (Void);
}
