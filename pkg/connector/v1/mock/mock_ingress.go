// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/azarc-io/vth-faas-sdk-go/pkg/connector/v1 (interfaces: Ingress)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIngress is a mock of Ingress interface.
type MockIngress struct {
	ctrl     *gomock.Controller
	recorder *MockIngressMockRecorder
}

// MockIngressMockRecorder is the mock recorder for MockIngress.
type MockIngressMockRecorder struct {
	mock *MockIngress
}

// NewMockIngress creates a new mock instance.
func NewMockIngress(ctrl *gomock.Controller) *MockIngress {
	mock := &MockIngress{ctrl: ctrl}
	mock.recorder = &MockIngressMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIngress) EXPECT() *MockIngressMockRecorder {
	return m.recorder
}

// ExternalAddress mocks base method.
func (m *MockIngress) ExternalAddress() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ExternalAddress")
	ret0, _ := ret[0].(string)
	return ret0
}

// ExternalAddress indicates an expected call of ExternalAddress.
func (mr *MockIngressMockRecorder) ExternalAddress() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExternalAddress", reflect.TypeOf((*MockIngress)(nil).ExternalAddress))
}

// InternalHost mocks base method.
func (m *MockIngress) InternalHost() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InternalHost")
	ret0, _ := ret[0].(string)
	return ret0
}

// InternalHost indicates an expected call of InternalHost.
func (mr *MockIngressMockRecorder) InternalHost() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InternalHost", reflect.TypeOf((*MockIngress)(nil).InternalHost))
}

// InternalPort mocks base method.
func (m *MockIngress) InternalPort() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InternalPort")
	ret0, _ := ret[0].(int)
	return ret0
}

// InternalPort indicates an expected call of InternalPort.
func (mr *MockIngressMockRecorder) InternalPort() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InternalPort", reflect.TypeOf((*MockIngress)(nil).InternalPort))
}
